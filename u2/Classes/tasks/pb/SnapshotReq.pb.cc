// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SnapshotReq.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SnapshotReq.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

void protobuf_ShutdownFile_SnapshotReq_2eproto() {
  delete SnapshotReq::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_SnapshotReq_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_SnapshotReq_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_SnapshotReq_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  SnapshotReq::default_instance_ = new SnapshotReq();
  SnapshotReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SnapshotReq_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_SnapshotReq_2eproto_once_);
void protobuf_AddDesc_SnapshotReq_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_SnapshotReq_2eproto_once_,
                 &protobuf_AddDesc_SnapshotReq_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SnapshotReq_2eproto {
  StaticDescriptorInitializer_SnapshotReq_2eproto() {
    protobuf_AddDesc_SnapshotReq_2eproto();
  }
} static_descriptor_initializer_SnapshotReq_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotReq::kRoomIdFieldNumber;
const int SnapshotReq::kHeroIdFieldNumber;
const int SnapshotReq::kAttHeroIdFieldNumber;
const int SnapshotReq::kAccSpeedFieldNumber;
const int SnapshotReq::kXFieldNumber;
const int SnapshotReq::kYFieldNumber;
const int SnapshotReq::kVxFieldNumber;
const int SnapshotReq::kVyFieldNumber;
const int SnapshotReq::kVersionFieldNumber;
const int SnapshotReq::kTaskIdFieldNumber;
const int SnapshotReq::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotReq::SnapshotReq()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SnapshotReq)
}

void SnapshotReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SnapshotReq::SnapshotReq(const SnapshotReq& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SnapshotReq)
}

void SnapshotReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roomid_ = 0u;
  heroid_ = 0u;
  attheroid_ = 0u;
  accspeed_ = 0;
  x_ = 0;
  y_ = 0;
  vx_ = 0;
  vy_ = 0;
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
}

SnapshotReq::~SnapshotReq() {
  // @@protoc_insertion_point(destructor:SnapshotReq)
  SharedDtor();
}

void SnapshotReq::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SnapshotReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SnapshotReq& SnapshotReq::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_SnapshotReq_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_SnapshotReq_2eproto();
#endif
  return *default_instance_;
}

SnapshotReq* SnapshotReq::default_instance_ = NULL;

SnapshotReq* SnapshotReq::New(::google::protobuf::Arena* arena) const {
  SnapshotReq* n = new SnapshotReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnapshotReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SnapshotReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SnapshotReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SnapshotReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roomid_, vy_);
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool SnapshotReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SnapshotReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 roomId = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_heroId;
        break;
      }

      // optional fixed32 heroId = 2;
      case 2: {
        if (tag == 21) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &heroid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_attHeroId;
        break;
      }

      // optional fixed32 attHeroId = 3;
      case 3: {
        if (tag == 29) {
         parse_attHeroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &attheroid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_accSpeed;
        break;
      }

      // optional float accSpeed = 4;
      case 4: {
        if (tag == 37) {
         parse_accSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accspeed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_x;
        break;
      }

      // optional float x = 5;
      case 5: {
        if (tag == 45) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_y;
        break;
      }

      // optional float y = 6;
      case 6: {
        if (tag == 53) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_vx;
        break;
      }

      // optional float vx = 7;
      case 7: {
        if (tag == 61) {
         parse_vx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_vy;
        break;
      }

      // optional float vy = 8;
      case 8: {
        if (tag == 69) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_version;
        break;
      }

      // optional string version = 9;
      case 9: {
        if (tag == 74) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SnapshotReq.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_taskId;
        break;
      }

      // optional string taskId = 10;
      case 10: {
        if (tag == 82) {
         parse_taskId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), this->taskid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SnapshotReq.taskId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_timestamp;
        break;
      }

      // optional fixed64 timestamp = 11;
      case 11: {
        if (tag == 89) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SnapshotReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SnapshotReq)
  return false;
#undef DO_
}

void SnapshotReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SnapshotReq)
  // optional fixed32 roomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->roomid(), output);
  }

  // optional fixed32 heroId = 2;
  if (this->heroid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->heroid(), output);
  }

  // optional fixed32 attHeroId = 3;
  if (this->attheroid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->attheroid(), output);
  }

  // optional float accSpeed = 4;
  if (this->accspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->accspeed(), output);
  }

  // optional float x = 5;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->x(), output);
  }

  // optional float y = 6;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->y(), output);
  }

  // optional float vx = 7;
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->vx(), output);
  }

  // optional float vy = 8;
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->vy(), output);
  }

  // optional string version = 9;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SnapshotReq.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->version(), output);
  }

  // optional string taskId = 10;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), this->taskid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SnapshotReq.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->taskid(), output);
  }

  // optional fixed64 timestamp = 11;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(11, this->timestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:SnapshotReq)
}

int SnapshotReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SnapshotReq)
  int total_size = 0;

  // optional fixed32 roomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 + 4;
  }

  // optional fixed32 heroId = 2;
  if (this->heroid() != 0) {
    total_size += 1 + 4;
  }

  // optional fixed32 attHeroId = 3;
  if (this->attheroid() != 0) {
    total_size += 1 + 4;
  }

  // optional float accSpeed = 4;
  if (this->accspeed() != 0) {
    total_size += 1 + 4;
  }

  // optional float x = 5;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 6;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float vx = 7;
  if (this->vx() != 0) {
    total_size += 1 + 4;
  }

  // optional float vy = 8;
  if (this->vy() != 0) {
    total_size += 1 + 4;
  }

  // optional string version = 9;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional string taskId = 10;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // optional fixed64 timestamp = 11;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapshotReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SnapshotReq*>(&from));
}

void SnapshotReq::MergeFrom(const SnapshotReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SnapshotReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.heroid() != 0) {
    set_heroid(from.heroid());
  }
  if (from.attheroid() != 0) {
    set_attheroid(from.attheroid());
  }
  if (from.accspeed() != 0) {
    set_accspeed(from.accspeed());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void SnapshotReq::CopyFrom(const SnapshotReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SnapshotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotReq::IsInitialized() const {

  return true;
}

void SnapshotReq::Swap(SnapshotReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotReq::InternalSwap(SnapshotReq* other) {
  std::swap(roomid_, other->roomid_);
  std::swap(heroid_, other->heroid_);
  std::swap(attheroid_, other->attheroid_);
  std::swap(accspeed_, other->accspeed_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(vx_, other->vx_);
  std::swap(vy_, other->vy_);
  version_.Swap(&other->version_);
  taskid_.Swap(&other->taskid_);
  std::swap(timestamp_, other->timestamp_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SnapshotReq::GetTypeName() const {
  return "SnapshotReq";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SnapshotReq

// optional fixed32 roomId = 1;
void SnapshotReq::clear_roomid() {
  roomid_ = 0u;
}
 ::google::protobuf::uint32 SnapshotReq::roomid() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.roomId)
  return roomid_;
}
 void SnapshotReq::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.roomId)
}

// optional fixed32 heroId = 2;
void SnapshotReq::clear_heroid() {
  heroid_ = 0u;
}
 ::google::protobuf::uint32 SnapshotReq::heroid() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.heroId)
  return heroid_;
}
 void SnapshotReq::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.heroId)
}

// optional fixed32 attHeroId = 3;
void SnapshotReq::clear_attheroid() {
  attheroid_ = 0u;
}
 ::google::protobuf::uint32 SnapshotReq::attheroid() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.attHeroId)
  return attheroid_;
}
 void SnapshotReq::set_attheroid(::google::protobuf::uint32 value) {
  
  attheroid_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.attHeroId)
}

// optional float accSpeed = 4;
void SnapshotReq::clear_accspeed() {
  accspeed_ = 0;
}
 float SnapshotReq::accspeed() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.accSpeed)
  return accspeed_;
}
 void SnapshotReq::set_accspeed(float value) {
  
  accspeed_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.accSpeed)
}

// optional float x = 5;
void SnapshotReq::clear_x() {
  x_ = 0;
}
 float SnapshotReq::x() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.x)
  return x_;
}
 void SnapshotReq::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.x)
}

// optional float y = 6;
void SnapshotReq::clear_y() {
  y_ = 0;
}
 float SnapshotReq::y() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.y)
  return y_;
}
 void SnapshotReq::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.y)
}

// optional float vx = 7;
void SnapshotReq::clear_vx() {
  vx_ = 0;
}
 float SnapshotReq::vx() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.vx)
  return vx_;
}
 void SnapshotReq::set_vx(float value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.vx)
}

// optional float vy = 8;
void SnapshotReq::clear_vy() {
  vy_ = 0;
}
 float SnapshotReq::vy() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.vy)
  return vy_;
}
 void SnapshotReq::set_vy(float value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.vy)
}

// optional string version = 9;
void SnapshotReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SnapshotReq::version() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SnapshotReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SnapshotReq.version)
}
 void SnapshotReq::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SnapshotReq.version)
}
 void SnapshotReq::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SnapshotReq.version)
}
 ::std::string* SnapshotReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:SnapshotReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SnapshotReq::release_version() {
  // @@protoc_insertion_point(field_release:SnapshotReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SnapshotReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:SnapshotReq.version)
}

// optional string taskId = 10;
void SnapshotReq::clear_taskid() {
  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SnapshotReq::taskid() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.taskId)
  return taskid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SnapshotReq::set_taskid(const ::std::string& value) {
  
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SnapshotReq.taskId)
}
 void SnapshotReq::set_taskid(const char* value) {
  
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SnapshotReq.taskId)
}
 void SnapshotReq::set_taskid(const char* value, size_t size) {
  
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SnapshotReq.taskId)
}
 ::std::string* SnapshotReq::mutable_taskid() {
  
  // @@protoc_insertion_point(field_mutable:SnapshotReq.taskId)
  return taskid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SnapshotReq::release_taskid() {
  // @@protoc_insertion_point(field_release:SnapshotReq.taskId)
  
  return taskid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SnapshotReq::set_allocated_taskid(::std::string* taskid) {
  if (taskid != NULL) {
    
  } else {
    
  }
  taskid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskid);
  // @@protoc_insertion_point(field_set_allocated:SnapshotReq.taskId)
}

// optional fixed64 timestamp = 11;
void SnapshotReq::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SnapshotReq::timestamp() const {
  // @@protoc_insertion_point(field_get:SnapshotReq.timestamp)
  return timestamp_;
}
 void SnapshotReq::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:SnapshotReq.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
